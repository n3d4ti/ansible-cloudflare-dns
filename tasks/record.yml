---
- name: Get record ID for matching name
  uri:
    url: "{{ cfAPIEndpoint }}zones/{{ zoneID }}/dns_records?type={{ record.type }}&name={{ record.name }}.{{ item.name }}"
    method: GET
    headers:
      X-Auth-Email: "{{ cfEmail }}"
      X-Auth-Key: "{{ cfAPIKey }}"
      Content-Type: "application/json"
    status_code:
      - 200
      - 304
  register: recordPresent

- name: Create DNS record
  uri:
    url: "{{ cfAPIEndpoint }}zones/{{ zoneID }}/dns_records"
    method: POST
    headers:
      X-Auth-Email: "{{ cfEmail }}"
      X-Auth-Key: "{{ cfAPIKey }}"
      Content-Type: "application/json"
    body: "{{ lookup('template','templates/record.json.j2') }}"
    body_format: json
    status_code: 200
  when:
    - record.state == 'present'
    - recordPresent.json.success
    - recordPresent.json.result | length == 0
  register: recordCreated

- name: Set the record id variable from "get"
  set_fact:
    recordID: "{{ recordPresent.json.result[0].id }}"
  when:
    - recordPresent.json is defined
    - recordPresent.json.success
    - recordPresent.json.result | length > 0

- name: Set the record id variable from "create"
  set_fact:
    recordID: "{{ recordCreated.json.result.id }}"
  when:
    - recordCreated.json is defined
    - recordCreated.json.success
    - recordPresent.json.result | length == 0

- name: Fail when record is not present and could not be created
  fail:
    msg: Record is not present and could not be created
  when:
    - not recordPresent.json.success
    - not recordCreated.json.success

- name: Update record
  uri:
    url: "{{ cfAPIEndpoint }}zones/{{ zoneID }}/dns_records/{{ recordID }}"
    method: PUT
    headers:
      X-Auth-Email: "{{ cfEmail }}"
      X-Auth-Key: "{{ cfAPIKey }}"
      Content-Type: "application/json"
    body: "{{ lookup('template','templates/record.json.j2') }}"
    body_format: json
    body_format: json
    status_code: 200
  when:
    - record.state == 'present'
    - recordPresent.json.success
    - recordPresent.json.result is defined
    - not recordCreated

- name: Delete DNS record
  uri:
    url: "{{ cfAPIEndpoint }}zones/{{ zoneID }}/dns_records/{{ recordID }}"
    method: DELETE
    headers:
      X-Auth-Email: "{{ cfEmail }}"
      X-Auth-Key: "{{ cfAPIKey }}"
      Content-Type: "application/json"
    status_code: 200
  register: recordDeleted
  when:
    - record.state == 'absent'
    - recordID is defined
    - recordPresent.json is defined
    - recordPresent.json.success
    - recordPresent.json.result | length > 0
